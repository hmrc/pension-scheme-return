# Copyright 2024 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = pension-scheme-return

# Default http client
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

play.http.parser.maxDiskBuffer = 10MB
play.http.parser.maxMemoryBuffer = 10MB

# Play Modules
play.modules.enabled += "uk.gov.hmrc.pensionschemereturn.config.Module"

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

# this key is for local development only!
queryParameter.encryption.key="gvBoGdgzqG1AarzF1LY0zQ=="

controllers {
  # 300 is the default, you may need to change this according to your needs
  confidenceLevel = 300

  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }
}

microservice {

  services {
    auth {
      host = localhost
      port = 8500
    }

    if-hod {
       host = localhost
       port = 10702
       env = "ist0"
       authorizationToken = "local"
    }

    pensionsScheme {
       host = localhost
       port = 8203
    }
  }
}

serviceUrls {
  get-overview = "/pension-online/reports/overview/pods/%s/PSR?fromDate=%s&toDate=%s"
  get-versions = "/pension-online/reports/%s/PSR/versions?startDate=%s"
  submit-standard-psr = "/pension-online/scheme-return/%s"
  get-standard-psr = "/pension-online/scheme-return/%s"
  is-psa-associated = "/pensions-scheme/is-psa-associated"
}

earliestPsrPeriodStartDate = "2015-04-06"
